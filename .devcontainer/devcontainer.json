// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-outside-of-docker
{
	"name": "Cpp",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			"USE_CLANG": "1"
		}
	},
	"customizations": {
		"vscode": {
			"settings": {
				"editor.formatOnSave": true,
				"C_Cpp.default.cppStandard": "c++20",
				"C_Cpp.default.cStandard": "c11",
				"C_Cpp.formatting": "clangFormat",
				"C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools"
			},
			"extensions": [
				"ms-vscode.cpptools-extension-pack",
				// Bash Beautify
				"shakram02.bash-beautify",
				// C++ Algorithm Mnemonics
				"davidbroetje.algorithm-mnemonics-vscode",
				// Python extension
				"ms-python.python",
				// GitLens
				"eamodio.gitlens",
				// Doxygen Language Support
				"bbenoist.doxygen",
				// Doxygen Documentation
				"cschlosser.doxdocgen",
				// Gitconfig Syntax
				"sidneys1.gitconfig",
				// Live Share Extension Pack
				"ms-vsliveshare.vsliveshare-pack",
				// Markdown All in one
				"yzhang.markdown-all-in-one",
				//Markdown PDF
				"yzane.markdown-pdf",
				// Markdown Lint
				"davidanson.vscode-markdownlint",
				// Shebang Snippets
				"rpinski.shebang-snippets",
				// TLDR Pages
				"bmuskalla.vscode-tldr",
				// TODO Tree
				"gruntfuggly.todo-tree",
				// VS IntelliCode
				"visualstudioexptteam.vscodeintellicode",
				// Test Explorer UI
				"hbenl.vscode-test-explorer",
				// Word Count
				"ms-vscode.wordcount",
				// Resource monitor
				"mutantdino.resourcemonitor",
				// CMake Test Adapter for Test Explorer Sidebar
				"fredericbonnet.cmake-test-adapter",
				// Integrated hex editor
				"ms-vscode.hexeditor",
				// Better C++ Syntax
				"jeff-hykin.better-cpp-syntax",
				// YAML language support
				"redhat.vscode-yaml"
			]
		}
	},
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    // Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},
	"runArgs": ["--privileged", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
	"features": {
		"git": "latest",
		"git-lfs": "latest"
	}
}
